* {
    font-family: "Roboto", sans-serif;
    font-weight: 400;
    font-style: normal;
}
body{
    margin: 0;
    padding: 0;
}
.topbar{
    width: 100%;
    height: 100px;
    background-color: rgb(75, 165, 227);
}
.topbar-flex, .footer-flex{
    display: flex;
    justify-content: center;
    align-items: center;
}
.cbr{
    font-size: 60px;
    margin-top: 20px;
    color: white;
}
.flex{
    display: flex;
    justify-content: space-between;
    align-items: center;
}
#vragen-container{
    width: 700px;
    height: 650px;
    margin-top:120px;
}
.titel{
    font-size: 25px;
    border: solid black;
    padding: 15px;
    width: 550px;
    height: 60px;
    cursor: default;
}
.flex-box{
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-left: 50px;
}
.vraag-a, .vraag-b, .vraag-c{
    width: 550px;
    height: 80px;
    border: solid black 2px;
    margin-top: 30px;
    cursor: pointer;

}
.vraag-a:hover, .vraag-b:hover, .vraag-c:hover{
    background-color: rgb(255, 166, 0);
    color: white;
}
.vraag-a.clicked, .vraag-b.clicked, .vraag-c.clicked{
    background-color: orange;
    color: white;
}
.a, .b, .c{
    font-size: 25px;
    margin-top: 20px;
}
.volgende-vraag{
    margin-top: 50px;
}
.fa-caret-square-o-left:hover, .fa-caret-square-o-right:hover{
    color: rgb(75, 165, 227);
}
.gap{
    height: 190px;
}
.footer{
    width: 100%;
    height: 100px;
    background-color: rgb(75, 165, 227);
}
.copyright{
    font-size: 15px;
    margin-top: 50px;
    color: white;
}

.beautiful-button {
    position: relative;
    display: inline-block;
    background: linear-gradient(to bottom, #1b1c3f, #4a4e91);
   /* Gradient background */
    color: white;
   /* White text color */
    font-family: "Segoe UI", sans-serif;
   /* Stylish and legible font */
    font-weight: bold;
    font-size: 18px;
   /* Large font size */
    border: none;
   /* No border */
    border-radius: 30px;
   /* Rounded corners */
    padding: 14px 28px;
   /* Large padding */
    cursor: pointer;
   /* Cursor on hover */
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
   /* Subtle shadow */
    animation: button-shimmer 2s infinite;
    transition: all 0.3s ease-in-out;
   /* Smooth transition */
  }
  
  /* Hover animation */
  .beautiful-button:hover {
    background: linear-gradient(to bottom, #2c2f63, #5b67b7);
    animation: button-particles 1s ease-in-out infinite;
    transform: translateY(-2px);
  }
  
  /* Click animation */
  .beautiful-button:active {
    transform: scale(0.95);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  }
  
  /* Shimmer animation */
  @keyframes button-shimmer {
    0% {
      background-position: left top;
    }
  
    100% {
      background-position: right bottom;
    }
  }
  
  /* Particle animation */
  @keyframes button-particles {
    0% {
      background-position: left top;
    }
  
    100% {
      background-position: right bottom;
    }
  }

  /* Hide the default checkbox */
.container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
    border-radius: 5px;
   }
   
   .container {
    display: block;
    position: relative;
    cursor: pointer;
    font-size: 20px;
    user-select: none;
    border-radius: 5px;
    box-shadow: 2px 2px 0px rgb(183, 183, 183);
   }
   
   /* Create a custom checkbox */
   .checkmark {
    position: relative;
    top: 0;
    left: 0;
    height: 1.3em;
    width: 1.3em;
    background-color: #ccc;
    border-radius: 5px;
   }
   
   /* When the checkbox is checked, add a blue background */
   .container input:checked ~ .checkmark {
    box-shadow: 3px 3px 0px rgb(183, 183, 183);
    transition: all 0.2s;
    opacity: 1;
    background-image: linear-gradient(45deg, rgb(100, 61, 219) 0%, rgb(217, 21, 239) 100%);
   }
   
   .container input ~ .checkmark {
    transition: all 0.2s;
    opacity: 1;
    box-shadow: 1px 1px 0px rgb(183, 183, 183);
   }
   
   /* Create the checkmark/indicator (hidden when not checked) */
   .checkmark:after {
    content: "";
    position: absolute;
    opacity: 0;
    transition: all 0.2s;
   }
   
   /* Show the checkmark when checked */
   .container input:checked ~ .checkmark:after {
    opacity: 1;
    transition: all 0.2s;
   }
   
   /* Style the checkmark/indicator */
   .container .checkmark:after {
    left: 0.45em;
    top: 0.25em;
    width: 0.25em;
    height: 0.5em;
    border: solid white;
    border-width: 0 0.15em 0.15em 0;
    transform: rotate(45deg);
   }